{"version":3,"file":"static/js/266.a48e47ad.chunk.js","mappings":"2NACA,QAA4B,6BAA5B,EAAiE,yBAAjE,EAAiG,wBAAjG,EAA0I,kCAA1I,EAAoL,yBAApL,EAAqN,yBAArN,EAAwP,2BAAxP,EAAuS,qCAAvS,EAAqV,0B,gCCOrV,MAmFA,EAnFkBA,KAChB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,KAGNC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BR,GAAWS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIV,GAAQ,IAAE,CAACO,GAAOC,IAAQ,EAuB7C,OACEG,EAAAA,EAAAA,KAAA,WAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBH,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAaH,SAAC,YAC7BC,EAAAA,EAAAA,MAAA,QAAMG,SAxBSC,UACnBX,EAAEY,iBACF,IACE,MAAMC,QAAevB,GAASwB,EAAAA,EAAAA,IAAUpB,IACrCqB,SACAC,MAAK,KACJ1B,GAAS2B,EAAAA,EAAAA,MAAiB,IAK9B,OAFAC,IAAAA,OAAgBC,QAAQ,qBACxB3B,EAAS,eACFqB,CACT,CAAE,MAAOO,GACPF,IAAAA,OAAgBG,QACd,8DAEFC,QAAQF,MAAM,gBAAiBA,EACjC,GAOkCZ,UAAWC,EAAYH,SAAA,EACnDC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBH,SAAA,EACpCD,EAAAA,EAAAA,KAAA,SACEkB,KAAK,QACLtB,KAAK,QACLC,MAAOR,EAASG,MAChB2B,SAAUzB,EACV0B,YAAY,QACZjB,UAAWC,EACXiB,UAAQ,KAEVrB,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,QAAQnB,UAAWC,EAAaH,SAAC,eAIlDC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBH,SAAA,EACpCD,EAAAA,EAAAA,KAAA,SACEkB,KAAK,WACLtB,KAAK,WACLC,MAAOR,EAASI,SAChB0B,SAAUzB,EACV0B,YAAY,WACZjB,UAAWC,EACXiB,UAAQ,KAEVrB,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,WAAWnB,UAAWC,EAAaH,SAAC,kBAIrDC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeH,SAAA,EAC7BD,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,KAAM,SACNN,KAAM,SACNO,WAAYrB,KAGdJ,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,GAAI,YAAY1B,UACpBD,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CAACC,KAAM,WAAYC,WAAYrB,gBAKtC,C","sources":["webpack://health-project-app/./src/pages/LoginForm/LoginForm.module.css?4475","pages/LoginForm/LoginForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__rH38T\",\"title\":\"LoginForm_title__Av8+I\",\"form\":\"LoginForm_form__WP0+s\",\"inputContainer\":\"LoginForm_inputContainer__AnN3A\",\"label\":\"LoginForm_label__MiS25\",\"input\":\"LoginForm_input__E5Ti3\",\"buttons\":\"LoginForm_buttons__VbsSu\",\"transparentButton\":\"LoginForm_transparentButton__Jpdvn\",\"button\":\"LoginForm_button__WAnEy\"};","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { getCurrentUser, loginUser } from \"../../redux/auth/authOperations\";\nimport Button from \"../../components/common/Button/Button\";\nimport styles from \"./LoginForm.module.css\";\nimport Notiflix from \"notiflix\"; // Import Notiflix for notifications\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const action = await dispatch(loginUser(userData))\n        .unwrap()\n        .then(() => {\n          dispatch(getCurrentUser());\n        });\n\n      Notiflix.Notify.success(\"Login successful!\");\n      navigate(\"/calculator\"); // Redirect after successful login\n      return action;\n    } catch (error) {\n      Notiflix.Notify.failure(\n        \"Login failed. Please check your credentials and try again.\"\n      );\n      console.error(\"Login failed:\", error);\n    }\n  };\n\n  return (\n    <section>\n      <div className={styles.container}>\n        <h2 className={styles.title}>Log in</h2>\n        <form onSubmit={handleSubmit} className={styles.form}>\n          <div className={styles.inputContainer}>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={userData.email}\n              onChange={handleChange}\n              placeholder=\"Email\"\n              className={styles.input}\n              required\n            />\n            <label htmlFor=\"email\" className={styles.label}>\n              Email*\n            </label>\n          </div>\n          <div className={styles.inputContainer}>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={userData.password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n              className={styles.input}\n              required\n            />\n            <label htmlFor=\"password\" className={styles.label}>\n              Password*\n            </label>\n          </div>\n          <div className={styles.buttons}>\n            <Button\n              text={\"Log in\"}\n              type={\"submit\"}\n              extraClass={styles.button}\n            />\n\n            <Link to={\"/register\"}>\n              <Button text={\"Register\"} extraClass={styles.transparentButton} />\n            </Link>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default LoginForm;\n"],"names":["LoginForm","dispatch","useDispatch","navigate","useNavigate","userData","setUserData","useState","email","password","handleChange","e","name","value","target","_objectSpread","_jsx","children","_jsxs","className","styles","onSubmit","async","preventDefault","action","loginUser","unwrap","then","getCurrentUser","Notiflix","success","error","failure","console","type","onChange","placeholder","required","htmlFor","Button","text","extraClass","Link","to"],"sourceRoot":""}