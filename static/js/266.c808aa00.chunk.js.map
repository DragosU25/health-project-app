{"version":3,"file":"static/js/266.c808aa00.chunk.js","mappings":"iNACA,QAA4B,6BAA5B,EAAiE,yBAAjE,EAAiG,wBAAjG,EAA0I,kCAA1I,EAAoL,yBAApL,EAAqN,yBAArN,EAAwP,2BAAxP,EAAuS,qCAAvS,EAAqV,0B,gCCOrV,MAmFA,EAnFkBA,KAChB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,KAGNC,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BR,EAAY,IAAKD,EAAU,CAACO,GAAOC,GAAQ,EAuB7C,OACEE,EAAAA,EAAAA,KAAA,WAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBH,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAaH,SAAC,YAC7BC,EAAAA,EAAAA,MAAA,QAAMG,SAxBSC,UACnBV,EAAEW,iBACF,IACE,MAAMC,QAAetB,GAASuB,EAAAA,EAAAA,IAAUnB,IACrCoB,SACAC,MAAK,KACJzB,GAAS0B,EAAAA,EAAAA,MAAiB,IAK9B,OAFAC,IAAAA,OAAgBC,QAAQ,qBACxB1B,EAAS,eACFoB,CACT,CAAE,MAAOO,GACPF,IAAAA,OAAgBG,QACd,8DAEFC,QAAQF,MAAM,gBAAiBA,EACjC,GAOkCZ,UAAWC,EAAYH,SAAA,EACnDC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBH,SAAA,EACpCD,EAAAA,EAAAA,KAAA,SACEkB,KAAK,QACLrB,KAAK,QACLC,MAAOR,EAASG,MAChB0B,SAAUxB,EACVyB,YAAY,QACZjB,UAAWC,EACXiB,UAAQ,KAEVrB,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,QAAQnB,UAAWC,EAAaH,SAAC,eAIlDC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBH,SAAA,EACpCD,EAAAA,EAAAA,KAAA,SACEkB,KAAK,WACLrB,KAAK,WACLC,MAAOR,EAASI,SAChByB,SAAUxB,EACVyB,YAAY,WACZjB,UAAWC,EACXiB,UAAQ,KAEVrB,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,WAAWnB,UAAWC,EAAaH,SAAC,kBAIrDC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeH,SAAA,EAC7BD,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,KAAM,SACNN,KAAM,SACNO,WAAYrB,KAGdJ,EAAAA,EAAAA,KAAC0B,EAAAA,GAAI,CAACC,GAAI,YAAY1B,UACpBD,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CAACC,KAAM,WAAYC,WAAYrB,gBAKtC,C","sources":["webpack://health-project-app/./src/pages/LoginForm/LoginForm.module.css?4475","pages/LoginForm/LoginForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__oyx61\",\"title\":\"LoginForm_title__Z6j0q\",\"form\":\"LoginForm_form__Uk6VB\",\"inputContainer\":\"LoginForm_inputContainer__R+TAn\",\"label\":\"LoginForm_label__DsYJ9\",\"input\":\"LoginForm_input__ffI7J\",\"buttons\":\"LoginForm_buttons__Nf1hJ\",\"transparentButton\":\"LoginForm_transparentButton__+5laZ\",\"button\":\"LoginForm_button__McZcJ\"};","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getCurrentUser, loginUser } from \"../../redux/auth/authOperations\";\r\nimport Button from \"../../components/common/Button/Button\";\r\nimport styles from \"./LoginForm.module.css\";\r\nimport Notiflix from \"notiflix\"; // Import Notiflix for notifications\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [userData, setUserData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({ ...userData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const action = await dispatch(loginUser(userData))\r\n        .unwrap()\r\n        .then(() => {\r\n          dispatch(getCurrentUser());\r\n        });\r\n\r\n      Notiflix.Notify.success(\"Login successful!\");\r\n      navigate(\"/calculator\"); // Redirect after successful login\r\n      return action;\r\n    } catch (error) {\r\n      Notiflix.Notify.failure(\r\n        \"Login failed. Please check your credentials and try again.\"\r\n      );\r\n      console.error(\"Login failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className={styles.container}>\r\n        <h2 className={styles.title}>Log in</h2>\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <div className={styles.inputContainer}>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={userData.email}\r\n              onChange={handleChange}\r\n              placeholder=\"Email\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n            <label htmlFor=\"email\" className={styles.label}>\r\n              Email*\r\n            </label>\r\n          </div>\r\n          <div className={styles.inputContainer}>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={userData.password}\r\n              onChange={handleChange}\r\n              placeholder=\"Password\"\r\n              className={styles.input}\r\n              required\r\n            />\r\n            <label htmlFor=\"password\" className={styles.label}>\r\n              Password*\r\n            </label>\r\n          </div>\r\n          <div className={styles.buttons}>\r\n            <Button\r\n              text={\"Log in\"}\r\n              type={\"submit\"}\r\n              extraClass={styles.button}\r\n            />\r\n\r\n            <Link to={\"/register\"}>\r\n              <Button text={\"Register\"} extraClass={styles.transparentButton} />\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":["LoginForm","dispatch","useDispatch","navigate","useNavigate","userData","setUserData","useState","email","password","handleChange","e","name","value","target","_jsx","children","_jsxs","className","styles","onSubmit","async","preventDefault","action","loginUser","unwrap","then","getCurrentUser","Notiflix","success","error","failure","console","type","onChange","placeholder","required","htmlFor","Button","text","extraClass","Link","to"],"sourceRoot":""}